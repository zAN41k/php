<?php
//Создайте массив, заполненный числами от 1 до 100. Найдите сумму элементов данного массива.
$arr=range(1,100);
echo array_sum($arr);

print "\n";

//Дан массив с элементами 'a', 'b', 'c', 'd', 'e'. С помощью функции array_map сделайте из него массив 'A', 'B', 'C', 'D', 'E'.
$arr=['a', 'b', 'c', 'd', 'e'];
$arr=array_map('strtoupper',$arr);
var_dump($arr);

print "\n";

//Дан массив $arr. Подсчитайте количество элементов этого массива.
$arr=range(1,100);
echo count($arr);


print "\n";

//Дан массив $arr. С помощью функции count выведите последний элемент данного массива.
$arr=range(1,100);
echo $arr[count($arr)]; 

print "\n";


//Дан массив с числами. Проверьте, что в нем есть элемент со значением 3.
$arr=range(1,100);
echo in_array(3,$arr);

print "\n";

//Дан массив [1, 2, 3, 4, 5]. Найдите сумму элементов данного массива.
$arr=[1,2,3,4,5];
$s=array_sum($arr);
echo $s;
 
print "\n";
// Дан массив [1, 2, 3, 4, 5]. Найдите произведение (умножение) элементов данного массива.
$arr=[1,2,3,4,5];
$s=array_product($arr);
echo $s;


print "\n";
//Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива.
$arr=[1,2,3,4,5];
$s=array_sum($arr);
echo $s/count($arr);

print "\n";

// Создайте массив, заполненный числами от 1 до 100.
$arr=range(1,100);

print "\n";

//Создайте массив, заполненный буквами от 'a' до 'z'.
$arr=range('a','z');
var_dump($arr);



print "\n";
//Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл.
$arr=range('1','9');
echo implode ('-',$arr);

print "\n";

//Найдите сумму чисел от 1 до 100 не используя цикл.
$arr=range(1,100);
echo array_sum($arr);

print "\n";

//Найдите произведение чисел от 1 до 10 не используя цикл.
 $arr=range('1','10');
 echo array_product($arr);

print "\n";

//Даны два массива: первый с элементами 1, 2, 3, второй с элементами 'a', 'b', 'c'. Сделайте из них массив с элементами 1, 2, 3, 'a', 'b', 'c'.
$arr=[1,2,3];
$sec=['a','b','c'];
$res=array_merge($arr,$sec);
var_dump($res);

print "\n";

//Дан массив с элементами 1, 2, 3, 4, 5. С помощью функции array_slice создайте из него массив $result с элементами 2, 3, 4.
$arr=range(1,5);
$res=array_slice($arr,1,3);
var_dump($res);

print "\n";

//Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice преобразуйте массив в [1, 4, 5].
$arr=range(1,5);
$res=array_splice($arr,1,2);
//var_dump($res);

print "\n";
var_dump($arr);

//Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4].
$arr=range(1,5);
$res=array_splice($arr,1,3);
var_dump($res);

print "\n";
// Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
$arr=range(1,5);
$res=array_splice($arr,3,0,['a','b','c']);
var_dump($arr);

print "\n";

//Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
$arr=range(1,5);
$res=array_splice($arr,1,0,['a','b']);
//var_dump($arr);
$res=array_splice($arr,6,0,['c']);
//var_dump($arr);
$res=array_splice($arr,8,0,['e']);
var_dump($arr);

print "\n";

//Дан массив 'a'=>1, 'b'=>2, 'c'=>3'. Запишите в массив $keys ключи из этого массива, а в $values – значения.
$arr=['a'=>1, 'b'=>2, 'c'=>3];
$key=array_keys($arr);
var_dump($key);
print "\n";

$values=array_values($arr);
var_dump($values);

print "\n";

//Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Создайте с их помощью массив 'a'=>1, 'b'=>2, 'c'=>3'.
$a=['a', 'b', 'c'];
$b=[1, 2, 3];
$res=array_combine($a,$b);
var_dump($res);

print "\n";

// Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Поменяйте в нем местами ключи и значения.
$arr=['a'=>1,'b'=>2,'c'=>3];
$res=array_flip($arr);
var_dump($res);

print "\n";

//Дан массив с элементами 1, 2, 3, 4, 5. Сделайте из него массив с элементами 5, 4, 3, 2, 1.
$arr=range(1,5);
$arr=array_reverse($arr);
var_dump($arr);

print "\n";

//Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-'.
$arr=['a', '-', 'b', '-', 'c', '-', 'd'];
echo array_search('-',$arr);

print "\n";

//Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice.
$arr=['a', '-', 'b', '-', 'c', '-', 'd'];
$res=array_splice($arr,array_search('-',$arr),1);
var_dump($arr);

print "\n";

// Дан массив ['a', 'b', 'c', 'd', 'e']. Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'.
$arr=['a', 'b', 'c', 'd', 'e'];
$res=array_replace($arr,[0=>'!',3=>'!!']);
var_dump($res);


print "\n";

//Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок.
$arr=['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
sort($arr); //sort - по возрастанию элементов
var_dump($arr);
print "\n";

$arr2=['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
rsort($arr2); //rsort - по убыванию элементов
 var_dump($arr2);
print "\n";
 
$arr3=['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
asort($arr3); //asort - по возрастанию элементов с сохранением ключей
var_dump($arr3);
print "\n";
    
$arr4=['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
ksort($arr4); //ksort - по возрастанию ключей
var_dump($arr4);
print "\n";

$arr5=['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
usort($arr5); //usort - по функции по элементам
var_dump($arr5);
print "\n";

//Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный элемент из данного массива.
$arr=['a'=>1, 'b'=>2, 'c'=>3];
$key= array_rand($arr);
echo $arr[$key];
print "\n";
//Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный ключ данного массива.
 $arr=['a'=>1, 'b'=>2, 'c'=>3];
echo array_rand($arr);
 
print "\n";

// Дан массив $arr. Перемешайте его элементы в случайном порядке.
$arr=[1,2,3,4,5];
shuffle($arr);
var_dump($arr);
//Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке.
$arr=range(1,25);
shuffle($arr);
var_dump($arr);


print "\n";

// Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись.
$arr=range('a','z');
shuffle($arr);
var_dump($arr);

print "\n";

// Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. Буквы не должны повторяться.
$arr = range('a','z');// создаем массив от а до z;
shuffle($arr);// перемешиваем массив 
array_splice($arr,0,20); //отрезаем символы с 0 по 20
echo implode('',$arr); //переводим массив в строку, в которой 6 символов ;)

print "\n";


// Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы.
$arr=['a', 'b', 'c', 'b', 'a'];
var_dump(array_unique($arr));


print "\n";

// Дан массив с элементами 1, 2, 3, 4, 5. Выведите на экран его первый и последний элемент, причем так, чтобы в исходном массиве они исчезли.
$arr=range(1,5);
echo array_shift($arr);
print "\n";

echo array_pop($arr);
print "\n";

var_dump($arr);

print "\n";
//Дан массив с элементами 1, 2, 3, 4, 5. Добавьте ему в начало элемент 0, а в конец - элемент 6.
$arr=range(1,5);
echo array_unshift($arr,0);
 
print "\n";

echo array_push($arr,6);

print "\n";
var_dump($arr);

//Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8. С помощью цикла и функций array_shift и array_pop выведите на экран его элементы в следующем порядке: 18273645.
$arr=range(1,8);
foreach($arr as $v) {
echo array_shift($arr);
echo array_pop($arr);

}

// доделаь задание Работа с array_pad, array_fill, array_fill_keys, array_chunk
?>
