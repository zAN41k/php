<?php
$vegetables=['corn'=>'yellow',
             'beet'=>'red',
             'carrot'=>'orange'];


$dinner=[0 => 'Sweet corn',
         1 => 'LemonChicken',
         2 => 'Braised Bamboo Fungus'];

//print "Vegetables  $vegetables";
//Определите один массив (или ряд массивов), хранящий местоположение и население пере-
//численных выше городов. Выведите на экран таблицу со сведениями о местоположении и
//населении, а также общее население всех десяти городов.
$USA = ['Нью-Йорк'=>'8175133',
       'Лос-Анджелес, шт. Калифорния' =>'3792621',
       'Чикаго, шт. Иллинойс'=>'2695598',
        'Хьюстон, шт. Техас'=>'2100263',
	'Филадельфия, шт. Пенсильвания'=>'1526006',
	'Феникс, шт. Аризона'=>'1445632',
	'Сан-Антонио, шт. Техас'=>'1327407',
	'Сан-Диего, шт. Калифорния'=>'1307402',
	'Даллас, шт. Техас'=>'1197816',
	'Сан-Хосе, шт. Калифорния'=>'945942'];
foreach ($USA as $key => $value) {
print " \$USA: $key $value\n";

}
print $USA['Нью-Йорк']+$USA['Лос-Анджелес, шт. Калифорния']+$USA['Чикаго, шт. Иллинойс']+$USA['Хьюстон, шт. Техас']+$USA['Филадельфия, шт. Пенсильвания']+
$USA['Феникс, шт. Аризона']+$USA['Сан-Антонио, шт. Техас']+$USA['Сан-Диего, шт. Калифорния']+$USA['Даллас, шт. Техас']+$USA['Сан-Хосе, шт. Калифорния'];

//var_dump($USA);

//пример
print "\n";
print "\n";
print "\n";

//Видоизмените выполнение задания в предыдущем упражнении таким образом, чтобы строки
//в результирующей таблице были упорядочены сначала по населению, а затем по названиям
//городов.
asort($USA); //сортирует значение ключей по возрастанию
print 'Сортировка по возрастанию населения ';
print "\n";

foreach ($USA as $key => $value) {
print " \$USA: $key $value\n";
}
print "\n";
print "\n";
print "\n";
print 'Сортировка по названию города ';
print "\n";

//ksort — Сортирует массив по ключам 
ksort($USA);
 foreach ($USA as $key => $value) {
  print " \$USA: $key $value\n";
 }  

  
//Выясните, как хранить каждый из приведенных ниже видов информации в массиве, а за-
//тем предоставьте пример кода, в котором создается такой массив, состоящий из нескольких
//элементов. Например, в следующем ассоциативном массиве в качестве ключа служит Ф.И.О.
//учащегося, а качестве значения — ассоциативный массив, состоящий из классов и идентифи-
//кационных номеров учащихся:


//Классы и идентификационные номера учащихся в классе.

print "\n";
$arr=['11b'=>['Петя'=>'1234','Коля'=>'1235','Вася'=>'1236'],
      '11c'=>['Антон'=>'4567','Вова'=>'7896','Катя'=>'9875']];
var_dump($arr);

print "\n";

//Количество каждого товара в запасах на складе.

$arr=['Картошка'=>'1000','Мука'=>'200','Сахар'=>'500'];
var_dump($arr);

print "\n";

//Школьные обеды, состоящие из разных блюд (закуски, салаты, напитки и т.д.), а также
//их стоимость на каждый день недели.
$arr= ['1'=>'Понедельник','2'=>'Вторник','3'=>'Среда','4'=>'Четверг','5'=>'Пятница','6'=>'Суббота','7'=>'Воскресенье'];

$dinner=['snack'=>['пн'=>'10','вт'=>'11','ср'=>'9'],
         'salat'=>['пн'=>'4','вт'=>'5','ср'=>'8'],
         'water'=>['пн'=>'1','вт'=>'2','ср'=>'3']];

var_dump($dinner);
print "\n";
print "\n";
print "\n";

echo $dinner['salat']['ср']; // для примера вывел стоимость салата в среду

print "\n";
//Имена членов вашей семьи.
$arr=['Влад','Юля','Эмилия'];
var_dump($arr);
print "\n";

//Имена, возраст и родство членов вашей семьи.

$arr=['Влад'=>['Возраст'=>'36','Статус'=>'Муж'],
      'Юля'=>['Возраст'=>'38','Статус'=>'Жена'],
      'Эмилия'=>['Возраст'=>'3','Статус'=>'Дочь']];
print "\n";
var_dump($arr);

//Видоизмените выполнение задания в первом упражнении таким образом, чтобы таблица со-
//держала также строки с общим населением каждого штата, упомянутого в перечне самых
//крупных городов США.
print "\n";

$arr=['Калифорния'=>['Лос-Анджелес'=>'3792621','Сан-Диего'=>'1307402','Сан-Хосе'=>'945942'],
      'Иллинойс'=>['Чикаго'=>'2695598'],
      'Техас'=>['Хьюстон'=>'2100263','Сан-Антонио'=>'1327407','Даллас'=>'1197816'],
      'Аризона'=>['Феникс'=>'1445632'],
      'Пенсильвания'=>['Филадельфия'=>'1526006'],
      'Нью-Йорк'=>['null'=>'8175133']];
var_dump($arr);
?>
